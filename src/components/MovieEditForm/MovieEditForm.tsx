import React, { useEffect, useState } from "react";
import style from "./MovieEditForm.module.css";
import { useOutletContext, useParams } from "react-router-dom";
import { editMovie, getMovieById, getMovies } from "../../Services/apiService";
import { MovieDetailsData } from "../../types";
import { HorizontalLine } from "../HorizontalLine/HorizontalLine";
import { useNavigate } from "react-router-dom";
import { NotificationManager } from "react-notifications";
import { Input } from "../Input/Input";

const initMovieData = {
  id: 0,
  title: "",
  year: 0,
  plot: "",
  posterUrl: "",
  rate: 0,
  actors: "",
  genres: [],
  runtime: 0,
  director: "",
};

export const MovieEditForm = () => {
  const [setMovies, movies] = useOutletContext<any>();
  const { id } = useParams();
  const navigate = useNavigate();
  const [movie, setMovie] = useState<MovieDetailsData>(initMovieData);

  useEffect(() => {
    getMovieById(Number(id)).then((response) => {
      if (!("rate" in response)) response.rate = 0;
      setMovie(response);
    });
  }, []);

  const saveData = () => {
    editMovie(movie)
      .then((response) => {
        getMovies()
          .then((newMovies) => {
            setMovies((prev: any) => newMovies);
            NotificationManager.success(`üòÉüòÉüòÉ`, "–§–∏–ª—å–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω");
            navigate(`/movies/${id}`);
          })
          .catch(() => {
            NotificationManager.error(
              `;(`,
              "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤"
            );
          });
      })
      .catch(() =>
        NotificationManager.error(`;(`, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∏–ª—å–º–∞")
      );
  };

  const handleChangeFor =
    (propertyName: string) => (event: { target: { value: any } }) => {
      let newValue = event.target.value;
      if (propertyName === "genres") {
        newValue = newValue.split(",");
      }
      setMovie((movie) => ({
        ...movie,
        [propertyName]: newValue,
      }));
    };

  return (
    <form className={style.form}>
      <div className={style.title}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</div>

      <Input
        label="–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞"
        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞"
        value={movie?.title}
        id="title"
        onChange={handleChangeFor}
      />

      <Input
        label="–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞"
        placeholder="–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞"
        value={String(movie?.year)}
        id="year"
        onChange={handleChangeFor}
      />

      <Input
        label="–û–ø–∏—Å–∞–Ω–∏–µ"
        placeholder="–í–≤–µ–¥–∏—Ç–µ ..."
        value={movie?.plot}
        id="plot"
        onChange={handleChangeFor}
      />

      <Input
        label="–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±–ª–æ–∂–∫—É"
        placeholder="–í–≤–µ–¥–∏—Ç–µ ..."
        value={movie?.posterUrl}
        id="posterUrl"
        onChange={handleChangeFor}
      />

      <Input
        label="–†–µ–π—Ç–∏–Ω–≥"
        placeholder="–ó–∞–¥–∞–π—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥"
        value={String(movie?.rate)}
        id="rate"
        onChange={handleChangeFor}
      />

      <Input
        label="–£–∫–∞–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–µ—Ä–æ–≤"
        placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–∫—Ç–µ—Ä–æ–≤ (—á–µ—Ä–µ–∑ ,)"
        value={movie?.actors}
        id="actors"
        onChange={handleChangeFor}
      />

      <Input
        label="–†–µ–∂–∏—Å—Å–µ—Ä"
        placeholder="–í–≤–µ–¥–∏—Ç–µ ..."
        value={movie?.director}
        id="director"
        onChange={handleChangeFor}
      />

      <Input
        label="–£–∫–∞–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤"
        placeholder="–í–≤–µ–¥–∏—Ç–µ ..."
        value={String(movie?.genres)}
        id="genres"
        onChange={handleChangeFor}
      />

      <Input
        label="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
        value={String(movie?.runtime)}
        id="runtime"
        onChange={handleChangeFor}
      />

      <HorizontalLine />

      <div className={style.footer}>
        <button
          type="button"
          className={style.cancelButton}
          onClick={() => {
            navigate(`/movies/${id}`);
          }}
        >
          –û—Ç–º–µ–Ω–∏—Ç—å
        </button>
        <button
          type="button"
          className={style.saveButton}
          onClick={() => {
            saveData();
          }}
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
      </div>
    </form>
  );
};
